#!/bin/bash

### The user must be logged in as root when running this script. ###
### Configure the guest account before running this script. ###

if [ $EUID != 0 ]; then
	echo "[!] You are not root. Login as root"
	exit
fi

### Check BASH history before beginning ###

nano ~/.bash_history
echo "BASH history printed, press enter when ready to continue."
read WAIT_FOR_USER

apt-get install aptitude -y
apt-get install apparmor -y

firewall(){
  
  apt-get install ufw -y
  ufw enable
  ufw default deny
  ufw allow 22
  ufw status
  echo "Firewall on, default, allowed 22."
  read WAIT_FOR_USER
	
  iptables -A INPUT -p tcp -s 0/0 -d 0/0 --dport 23 -j DROP         #Block Telnet
  iptables -A INPUT -p tcp -s 0/0 -d 0/0 --dport 2049 -j DROP       #Block NFS
  iptables -A INPUT -p udp -s 0/0 -d 0/0 --dport 2049 -j DROP       #Block NFS
  iptables -A INPUT -p tcp -s 0/0 -d 0/0 --dport 6000:6009 -j DROP  #Block X-Windows
  iptables -A INPUT -p tcp -s 0/0 -d 0/0 --dport 7100 -j DROP       #Block X-Windows font server
  iptables -A INPUT -p tcp -s 0/0 -d 0/0 --dport 515 -j DROP        #Block printer port
  iptables -A INPUT -p udp -s 0/0 -d 0/0 --dport 515 -j DROP        #Block printer port
  iptables -A INPUT -p tcp -s 0/0 -d 0/0 --dport 111 -j DROP        #Block Sun rpc/NFS
  iptables -A INPUT -p udp -s 0/0 -d 0/0 --dport 111 -j DROP        #Block Sun rpc/NFS
  iptables -A INPUT -p all -s localhost  -i eth0 -j DROP            #Deny outside packets from internet which claim to be from your loopback interface.
  echo "IPTables set, press enter to continue."
  read WAIT_FOR_USER
}

vis(){

	### Prints the contents of the sudoers directory ###
	ls -la /etc/sudoers.d/
	echo "Listed contents of sudoers directory, press enter to continue."
	read WAIT_FOR_USER
	
	### Edits the VISUDO file ###
	visudo
	echo "Edited VISUDO, press enter to continue."
	read WAIT_FOR_USER
}

ftp(){

	### Makes changes to /etc/vsftpd.conf if able ###
	if grep -Fxq "anonymous_enable=YES" /etc/vsftpd.conf; then
        	sed -i 's/anonymous_enable=YES/anonymous_enable=NO/g' /etc/vsftpd.conf &> /dev/null
  else
          echo "Did not find anonymous_enable."
	fi

	if grep -Fxq "write_enable=YES" /etc/vsftpd.conf; then
        	sed -i 's/write_enable=YES/#write_enable=YES/g' /etc/vsftpd.conf &> /dev/null
  else
          echo "Did not find write_enable."
	fi

	if grep -Fxq "local_enable=YES" /etc/vsftpd.conf; then
        	sed -i 's/local_enable=YES/local_enable=NO/g' /etc/vsftpd.conf &> /dev/null
  else
          echo "Did not find local_enable."
	fi
	
	echo "Conditionals for FTP service (vsftpd) were ran, press enter when ready to continue."
	read WAIT_FOR_USER
}

homefolders(){

	### Searchs the home directories and subdirectories of all user accounts ###
	for username in `more userlist `
	do
        	echo "-----------------------------------------------"
        	ls -la /home/$username/
        	echo "-----------------------------------------------"
        	ls -la /home/$username/Desktop
        	ls -la /home/$username/Documents
        	ls -la /home/$username/Downloads
        	ls -la /home/$username/Music
        	ls -la /home/$username/Pictures
        	ls -la /home/$username/Public
        	ls -la /home/$username/Templates
        	ls -la /home/$username/Videos
		echo "Press enter when ready to continue..."
        	read WAIT_FOR_USER
	done
}

user_accounts(){

	### Create the userlist for the user_accounts function ###
	touch userlist &> /dev/null
  	nano userlist
  	echo "Userlist created, press enter when ready to continue."
	
	### Protects the root account ###
	passwd root
	echo "Root password configured, press enter when ready to continue."
	read WAIT_FOR_USER
	
	### Changes the password of all users in userlist to 'Cyb3rP4tr10t5' ###
	for username in `more userlist `
	do
		chage -w 7 -m 10 -M 90 $username
		echo; echo "User $username's expirey changed!"
		echo "$username:Cyb3rP4tr10t5" | chpasswd
		echo; echo "User $username's password changed!"
	done
	
	echo "User passwords and expirey configured, press enter when ready to continue."
	read WAIT_FOR_USER
	
	### Configure the passwd, group, and shadow file ###
	nano /etc/passwd
	echo "/etc/passwd changed, press enter when ready to continue."
	read WAIT_FOR_USER
	
	nano /etc/group
	echo "/etc/group changed, press enter when ready to continue."
	read WAIT_FOR_USER
	
	nano /etc/shadow
	echo "/etc/shadow changed, press enter when ready to continue."
	read WAIT_FOR_USER
}
	

sys(){
	
	nano /etc/sysctl.conf
	sysctl -p
	echo "Sysctl settings updated, press enter to configure."
	read WAIT_FOR_USER
}

media(){

	echo "Pressing enter will show mp3, mp4, gif, jpg, jpeg, and png in sections."
	echo "Press enter when ready to begin media file process, MP3"
	read WAIT_FOR_USER
	
	### Be sure to answer any media file related questions prior to running this ###
	find / -name "*.mp3"
	echo "Press enter to proceed to next section, MP4"
	read WAIT_FOR_USER
	
	find / -name "*.mp4"
	echo "Press enter to proceed to next section, GIF"
	read WAIT_FOR_USER
	
	find / -name "*.gif"
	echo "Press enter to proceed to next section, JPG"
	read WAIT_FOR_USER
	
	find / -name "*.jpg"
	echo "Press enter to proceed to next section, JPEG"
	read WAIT_FOR_USER
	
	find / -name "*.jpeg"
	echo "Press enter to proceed to next section, PNG."
	read WAIT_FOR_USER
	
	find / -name "*.png"
	echo "Press enter to delete files mov, wav, wmv, avi, and ogg in next section."
	read WAIT_FOR_USER
	
	find / -name "*.mov" -type f -delete
	find / -name "*.wav" -type f -delete
 	find / -name "*.wmv" -type f -delete
 	find / -name "*.avi" -type f -delete
	find / -name "*.ogg" -type f -delete
	
	echo "Media files done, press enter when ready to continue."
	read WAIT_FOR_USER
}

hack(){
	
	### Edit this prior to running script, add in services seen ###
	apt-get remove nmap	 # Scanning
	apt-get remove dnmap     # Scanning
	apt-get remove telnet    # Insecure Transfer
	apt-get remove bind9     # DNS 
	apt-get remove apache2   # Webserver
	apt-get remove vsftpd    # FTP
	apt-get remove mysql-client mysql-server # Database
	apt-get remove mongodb   # Database
	apt-get remove mariadb   # Database
	apt-get remove samba # file sharing
	apt-get remove samba-common # file sharing
	apt-get remove smbclient # file sharing
	apt-get remove nfs-kernel-server # file sharing
	apt-get remove nfs-common # file sharing
	apt-get remove portmap # file sharing
	apt-get remove jetty     # Webserver
	apt-get remove nginx     # Webserver
	#apt-get remove x
	#apt-get remove x
	#apt-get remove x
	echo "Initial services section complete, press enter when ready to continue."
	
	### Removes files from /bin and removes netcat ###
	rm /bin/nc
	rm /bin/netcat
	rm /bin/nc.openbsd
	rm /bin/nc.traditional
	apt-get --purge autoremove netcat
	echo "Netcat section complete, press enter when ready to continue."
        read WAIT_FOR_USER
	
	### Removes all of the hacking tools associated with the kali-linux operating system ###
	
	apt-get remove john airbase-ng acccheck ace-voip amap apache-users arachni android-sdk apktool arduino armitage asleap automater \
	backdoor-factory bbqsql bed beef bing-ip2hosts binwalk blindelephant bluelog bluemaho bluepot blueranger bluesnarfer bulk-extractor \
	bully burpsuite braa \
	capstone casefile cdpsnarf cewl chntpw cisco-auditing-tool cisco-global-exploiter cisco-ocs cisco-torch cisco-router-config cmospwd \
	cookie-cadger commix cowpatty crackle creddump crunch cryptcat cymothoa copy-router-config cuckoo cutycapt \
	davtest dbd dbpwaudit dc3dd ddrescue deblaze dex2jar dff dhcpig dictstat dirb dirbuster distorm3 dmitry dns2tcp dnschef dnsenum \
	dnsmap dnsrecon dnstracer dnswalk doona dos2unix dotdotpwn dradis dumpzilla \
	eapmd5pass edb-debugger enum4linux enumiax exploitdb extundelete \
	fern-wifi-cracker fierce fiked fimap findmyhash firewalk fragroute foremost funkload \
	galleta ghost-fisher giskismet grabber go-lismero goofile gpp-decrypt gsad gsd gqrx guymager gr-scan \
	hamster-sidejack hash-identifier hexinject hexorbase http-tunnel httptunnel hping3 hydra \
	iaxflood inguma intrace inundator inviteflood ipv6-toolkit iphone-backup-analyzer intersect ismtp isr-evilgrade \
	jad javasnoop jboss-autopwn jd-gui john johnny joomscan jsql \
	kalibrate-rtl keepnote killerbee kismet keimpx \
	linux-exploit-suggester ldb lynis \
	maltego-teeth magictree masscan maskgen maskprocessor mdk3 metagoofil metasploit mfcuk mfoc mfterm miranda mitmproxy multiforcer \
	multimon-ng \
	ncrack netcat nishang nipper-ng ntop \
	oclgausscrack ohwurm ollydpg openvas-administrator openvas-cli openvas-manager openvas-scanner oscanner \
	p0f padbuster paros parsero patator pdf-parser pdfid pdgmail peepdf phrasendrescher pipal pixiewps plecost polenum policygen \
	powerfuzzer powersploit protos-sip proxystrike pwnat \
	rcrack rcrack-mt reaver rebind recon-ng redfang regripper responder ridenum rsmangler rtlsdr-scanner rtpbreak rtpflood rtpinsertsound \
	rtpmixsound \
	sakis3g sbd sctpscan setoolkit sfuzz shellnoob sidguesser siparmyknife sipp sipvicious skipfish slowhttptest smali smtp-user-enum \
	sniffjoke snmpcheck spooftootph sslcaudit sslsplit sslstrip sslyze sqldict sqlmap sqlninja sqlsus statprocessor \
	t50 termineter thc-hydra thc-ipv6 thc-pptp-bruter thc-ssl-dos tnscmd10g truecrack theharverster tlssled twofi \
	u3-pwn uatester urlcrazy uniscan unix-privesc-check vega w3af webscarab webshag webshells webslayer websploit weevely wfuzz wifi-honey \
	wifitap wifite wireshark winexe wpscan wordlists valgrind volatility voiphopper wol-e xspy xplico xsser yara yersinia zaproxy
	
	echo "All possile hacking tools ran through, press enter when ready to continue."
	read WAIT_FOR_USER
}

ssh(){
	
	### Installs SSH ###
	apt-get install ssh openssh-server -y
	echo "Client and server installed, press enter when ready to continue."
	READ WAIT_FOR_USER
	
	### Enables and creates a MOTD Banner message ###
	if grep -Fxq "#Banner /etc/issue.net" /etc/ssh/sshd_config; then
        	sed -i 's/#Banner/etc/issue.net/Banner /etc/issue.net' /etc/ssh/sshd_config &> /dev/null
		echo "All connections are monitored and recorded" >> /etc/issue.net &> /dev/null
		echo "Disconnect IMMEDIATELY if you are not an authorized user!" >> /etc/issue.net &> /dev/null
		echo "MOTD Banner created and configured"
   	fi
	
	### Enables IgnoreRhosts ###
	if grep -Fxq "IgnoreRhosts no" /etc/ssh/sshd_config; then
    		sed -i 's/IgnoreRhosts no/IgnoreRhosts yes/g' /etc/ssh/sshd_config &> /dev/null
		echo "Enabled IgnoreRHosts."
 	fi
	
	### Enables UsePAM ###
	if grep -Fxq "UsePAM no" /etc/ssh/sshd_config; then
		sed -i 's/UsePAM no/UsePAM yes/g' /etc/ssh/sshd_config &> /dev/null
		echo "UsePAM is set to yes."
	fi
	
	### Enables PrintMotd ###
	if grep -Fxq "PrintMotd no" /etc/ssh/sshd_config; then
		sed -i 's/PrintMotd no/PrintMotd yes/g' /etc/ssh/sshd_config &> /dev/null
		echo "PrintMOTD is configured"
	fi
	
	### Enables UsePrivilegeSeparation ###
	if grep -Fxq "UsePrivilegeSeparation no" /etc/ssh/sshd_config; then
    		sed -i 's/UsePrivilegeSeparation no/UsePrivilegeSeparation yes/g' /etc/ssh/sshd_config &> /dev/null
		echo "Enabled UsePrivilegeSeparation"
  	fi
	
	### Permits root login from 'YES' to 'NO' ###
	if grep -Fxq "PermitRootLogin yes" /etc/ssh/sshd_config; then
		sed -i 's/PermitRootLogin yes/PermitRootLogin no/g' /etc/ssh/sshd_config &> /dev/null
		echo "First conditional for PermitRootLogin was ran."
	fi
	
	### PermitRootLogin without password to no ###
 	if grep -Fxq "PermitRootLogin without-password" /etc/ssh/sshd_config; then
    		sed -i 's/PermitRootLogin without-password/PermitRootLogin no/g' /etc/ssh/sshd_config &> /dev/null
		echo "Second conditional for PermitRootLogin was ran."
  	fi
	
	### PermitRootLogin prohibit-password to no ###
	if grep -Fxq "PermitRootLogin prohibit-password" /etc/ssh/sshd_config; then
        	sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin no/g' /etc/ssh/sshd_config &> /dev/null
		echo "Prohibit-password was set to no."
	fi
	
	### Changes X11Forwarding from 'YES' to 'NO' ###
	if grep -Fxq "X11Forwarding yes" /etc/ssh/sshd_config; then
		sed -i 's/X11Forwarding yes/X11Forwarding no/g' /etc/ssh/sshd_config &> /dev/null
		echo "X11 Forwarding is not allowed."
	fi
	
	### Permits empty passwords from 'YES' to 'NO' ###
	if grep -Fxq "PermitEmptyPasswords yes" /etc/ssh/sshd_config; then
		sed -i 's/PermitEmptyPasswords yes/PermitEmpyPasswords no/g' /etc/ssh/sshd_config &> /dev/null
		echo "Empty passwords is set to no."
	fi
	
	### Changes protocol 1 to 2 ###
	if grep -Fxq "Protocol 1" /etc/ssh/sshd_config; then
	  sed -i 's/Protocol 1/Protocol 2/g' /etc/ssh/sshd_config &> /dev/null
	  echo "Protocol is set to 2."
	fi
	
  	echo "Press enter to confirm changes."
	read WAIT_FOR_USER
	nano /etc/ssh/sshd_config
	
	service ssh reload
	echo "SSH configured and reloaded, press enter when ready to continue."
	read WAIT_FOR_USER
}

pam(){

	apt-get install libpam-cracklib -y
	apt-get install auditd -y
	auditctl -e 1
	
	echo "Audit policy items libpam and auditd added, press enter when ready to continue."
	read WAIT_FOR_USER

	### Common-password ### 
	nano /etc/pam.d/common-auth
	echo "Common-password file configured, press enter when ready to continue."
	read WAIT_FOR_USER
	
	### Common-auth ###
	nano /etc/pam.d/common-auth
	echo "Common-auth file configured, press enter when ready to continue."
	read WAIT_FOR_USER
	
	### /etc/login.defs ### 
	nano /etc/login.defs
	echo "Login file configured, press enter when ready to continue."
	read WAIT_FOR_USER
}

cron_ps_listen_back(){
	
	### Lists the contents of the cron directories for the user ###
	ls -la /etc/cron*
	echo "Cron directories listed, press enter to check crontab file."
	read WAIT_FOR_USER
	
	crontab -e
	echo "Press enter to check the root crontab."
	read WAIT_FOR_USER
	
	crontab -l
	echo "Press enter to continue to check running processes."
	read WAIT_FOR_USER
	
	### Lists all running processes ###
	ps -A
	echo "Processes listed, press enter when ready to continue."
	read WAIT_FOR_USER
	
	### Lists all listening ports ###
	netstat -tulpna | grep "LISTEN"
	echo "Listening ports listed, press entere when ready to continue."
	read WAIT_FOR_USER
}

host(){

	### This will list the host file to confirm there are no abnormalities. ###
	nano /etc/hosts
	echo "Host file was listed, when ready press enter to continue."
	read WAIT_FOR_USER
}

### List of functions ###

main(){

	firewall
	sys
	ftp
	media
	user_accounts
	homefolders
	pam
	host
	vis
	cron_ps_listen_back
	hack
	ssh
}

main
