#!/bin/bash
#V15

# This is here because in the CP comp, you'll read some things before you work. 
# It wouldn't be good to potentially take something away / ruin something important.
# It's recommended to have paper out or a document to log some listed information of the output.
# If you're of another CyberPatriot team, and aren't a member of the team 'Marine Raiders'...
# It is against the rules of the competition to use this script, so please, abide by this regulation.

echo "Launch when ready."
read WAIT_FOR_USER

ssh(){

	# This will change the 'PermitRootLogin yes' to 'PermitRootLogin no'.
	# This will also disallow X11 Forwarding.
	
		if grep -Fxq "PermitRootLogin yes" /etc/ssh/sshd_config; then
		echo "[!] SSH ROOT login is enabled!"
		sed -i 's/PermitRootLogin yes/PermitRootLogin no/g' /etc/ssh/sshd_config &>/dev/null
		echo "[+] SSH ROOT login is disabled!"
		sleep 3
	
	fi
	
		if grep -Fxq "X11Forwarding yes" /etc/ssh/sshd_config; then
		echo "[!] X11 Forwarding is enabled!"
		sed -i 's/X11Forwarding yes/X11Forwarding no/g' /etc/ssh/sshd_config &>/dev/null
		echo "[+] X11 Forwarding has been disabled!"
		sleep 3
	
	fi
	echo "[!] PAUSE*"
	read WAIT_FOR_USER
	clear
}	

firewall(){

	# Sets the firewall to default standards
	# Enables the firewall
	
	ufw enable
	echo 'y' ufw reset
	echo "[!] PAUSE*"
	read WAIT_FOR_USER
	clear
}

updates(){

	# Updates and Upgrades
	
	apt-get update && apt-get dist-upgrade -y
	
	# Checks for daily updates
	
    if grep -q "APT::Periodic::Update-Package-Lists \"1\";" /etc/apt/apt.conf.d/10periodic; then
        echo "[!] Daily updates check already configured!"
		read WAIT_FOR_USER
    else
        sed -i 's/APT::Periodic::Update-Package-Lists "0";/APT::Periodic::Update-Package-Lists "1";/g' /etc/apt/apt.conf.d/10periodic
        echo "[+] Daily updates configured"
		read WAIT_FOR_USER
    fi
	echo "[!] PAUSE*"
	read WAIT_FOR_USER
	clear
}

policy(){

	# This will set the password policy for common-password & login.defs.
	# Also this will install libpam-cracklib for /etc/pam.d/common-password.
	
	apt-get update && apt-get install libpam-cracklib -y
    if grep -q "ucredit=-1 lcredit=-2 dcredit=-1" /etc/pam.d/common-password; then
        echo "[+] /etc/pam.d/common-password already configured"
		read WAIT_FOR_USER
    else
        echo "password   requisite    pam_cracklib.so retry=3 minlen=10 difok=3 ucredit=-1 lcredit=-2 dcredit=-1" >> /etc/pam.d/common-password
		echo "[+] /etc/pam.d/common-password set."
		read WAIT_FOR_USER
    fi

    sed -i 's/PASS_MAX_DAYS	99999/PASS_MAX_DAYS	150/g' /etc/login.defs
    sed -i 's/PASS_MIN_DAYS	0/PASS_MAX_DAYS	7/g' /etc/login.defs
    echo "[+] Password Policy set in /etc/pam.d/common-password and /etc/login.defs"
	echo "[!] PAUSE*"
	read WAIT_FOR_USER
	clear
}

media(){

	# Finds and lists media files with the following extensions.
	
	find / -name "*.mp3"
	find / -name "*.mp4"
	find / -name "*.gif"
	find / -name "*.jpg"
	find / -name "*.jpeg"
	find / -name "*.png"
	"[+] Listed all media files with the following extensions..."
	echo "[!] PAUSE*"
	read WAIT_FOR_USER
	clear
}

accounts(){

	# Disables the guest account
	# Hides the userlist from the login screen.     THIS HAPPENS BY ADDING LINES INTO THE FILE, AS THEY'RE PROBABLY ABSENT.
	# Changes the root password
	# Disables the root account
	
	echo 'allow-guest=false' >> /usr/share/lightdm/lightdm.conf.d/50-ubuntu.conf
	echo 'greeter-hide-users=true' >> /usr/share/lightdm/lightdm.conf.d/50-ubuntu.conf
	echo "[+] Lines added to file" 
	sleep 3
	
	passwd root 
	passwd -l root
	echo "[+] New ROOT passwd and locked ROOT account."
	echo "[!] PAUSE*"
	read WAIT_FOR_USER
	clear
}

rmhack(){

	# Attempts to uninstall hacking tools that are currently existing / services ETC ETC ETC
	# Anything listed that isn't present will output 'Package 'bind9' is not installed, so not removed'.
	# So you'll have a pretty good idea of what is present or what should be present.
	
	apt-get --purge autoremove john
	apt-get --purge autoremove hydra
	apt-get --purge autoremove nmap
	apt-get --purge autoremove aircrack-ng
	apt-get --purge autoremove wireshark
	apt-get --purge autoremove kismet
	apt-get --purge autoremove telnet
	apt-get --purge autoremove bind9
	apt-get --purge autoremove apache2
	apt-get --purge autoremove vsftpd
	apt-get --purge autoremove netcat
	apt-get --purge autoremove netcat-openbsd
	apt-get --purge autoremove netcat-traditional
	apt-get --purge autoremove ssh
	echo "[!] PAUSE*"
	read WAIT_FOR_USER
	clear
}

crontab(){

	# Checks the scheduled jobs
	echo "Listing /etc/cron* directories"
	ls -la /etc/cron*
	read WAIT_FOR_USER
	echo "Listing root crontab"
	crontab -l
	echo "[!] PAUSE*"
	read WAIT_FOR_USER
	clear
}

backdoors(){
	
	# Potentially lists backdoors.
	
	netstat -tulpna | grep "LISTEN"
	echo "[!] PAUSE*"
	read WAIT_FOR_USER
	clear
}

tools(){

	# Installs some interesting tools that are helpful, all up to the user of course.
	
	apt-get install chkrootkit
	apt-get install tiger
	apt-get install rkhunter
	echo "[!] PAUSE*"
	read WAIT_FOR_USER
}

# Calling the functions after user has 'approved script for launch'.

	#ssh
	#firewall
	#updates
	#policy
	#media
	#accounts
	#rmhack
	#crontab
	#backdoors
	#tools
	#hosts
