#!/bin/bash

#Linux CYBERSTEM interactive manual, V0.4

start() #Starts the function
{
        echo "Starting program..."
}

menu() #Starting of the menu
{
        printf "Which operation would you like to run...?\n" #printf is a better way of printing rather than echo, \n makes a new line blank etc.
        echo "1. Start" #Shows the option of 1 or 2 to be processed
        echo "2. Exit"
        read START_MENU #Reads the input of the keyboard and then the variable


        case $START_MENU in
        1)
                echo "Loading..."
                sleep 1 #Pauses for one second
                start #Moves on with the rest

                 ;;

        2)
                echo "Exiting program..."
                sleep 2
                exit #Closes the script, overall

                ;;

        *) #Asterisk to bring it back
                echo "Invaid input, redirecting..."
                sleep 2
                menu #Refers to the menu options
                ;;

        esac #Closing area
}

menu #Refers the menu outside of the function

echo "Creating Directories, etc..." #Creates CYBERSTEM directory and creates files inside of it
while [ true ]
	do
	sleep 1
	clear
	break
done

mkdir CYBERSTEM && touch CYBERSTEM/Navigation.txt && touch CYBERSTEM/Administration.txt && touch CYBERSTEM/Service.txt && touch CYBERSTEM/SecUpdates.txt && touch CYBERSTEM/GuestandRoot.txt && touch CYBERSTEM/PolicyAccount.txt && touch CYBERSTEM/ProcFile.txt && touch CYBERSTEM/UsrGroup.txt && touch CYBERSTEM/Accounts.txt && touch CYBERSTEM/Visudo&Passwd.txt && touch CYBERSTEM/SysLog.txt
#Creates the CYBERSTEM directory and creates text files in the directory
grep da * 2> grep-errors.txt
cat grep-errors.txt
echo "You are running " $(lsb_release -sd) "with kernel" $(uname -r)
read ERROR_IDENTIFICATION

while [ true ]
	do
	echo "Loading..."
	sleep 1
	clear
	break
done

printf "##########################################################\n" #Introduction
  echo "Welcome to the Linux training course!"
  echo "This manual will go straight from start to finish. "
  echo "This course will teach you the bare essentials of BASH!"
printf "During this tutorial you press -ENTER- to continue.\n"
  echo "##########################################################"
read WAIT_FOR_USER  #Reads the input of the keyboard

while [ true ]
	do
	clear
	break
done

begin()
{
	echo "Loading Lesson Selection..."
	sleep 1
	clear
}

menu2()
{

	printf "######Lesson Selection Menu################################\n"
	printf "[1] Basic Linux Navigation\n"
	printf "[2] Administrative Capabilities\n"
	printf "[3] Service Management\n"
	printf "[4] Security Updates\n"
	printf "[5] Guest Accounts and Root Login\n"
	printf "[6] Account Policy and Secure Lockout\n"
	printf "[7] Processes and Finding Files\n"
	printf "[8] Hidden Users and Groups\n"
	printf "[9] User Accounts\n"
	printf "[10] Sudoers file and Insecure Root Password\n"
	printf "[11] System Log Checking\n"
	echo "  ##########################################################"
	read USER_INPUT

	case $USER_INPUT in
	1)
		echo "Loading Lesson..."
		gedit Navigation.txt
		sleep 1
		read WAIT_FOR_USER
		clear
		
		;;
		
	2)
		echo "Loading Lesson..."
		gedit Administration.txt
		sleep 1
		read WAIT_FOR_USER
		clear
		
		;;
		
	3)
		echo "Loading Lesson..."
		gedit Service.txt
		sleep 1
		read WAIT_FOR_USER
		clear
	
		;;
		
	4)
		echo "Loading Lesson..."
		gedit SecUpdates.txt
		sleep 1
		read WAIT_FOR_USER
		clear
		
		;;
		
	5)
		echo "Loading Lesson..."
		gedit GuestandRoot.txt
		sleep 1
		read WAIT_FOR_USER
		clear
		
		;;
		
	6)
		echo "Loading Lesson..."
		gedit PolicyAccount.txt
		sleep 1
		read WAIT_FOR_USER
		clear
		
		;;
	
	7)
		echo "Loading Lesson..."
		gedit ProcFile.txt
		sleep 1
		read WAIT_FOR_USER
		clear
		
		;;
		
	8)
		echo "Loading Lesson..."
		gedit UsrGroup.txt
		sleep 1
		read WAIT_FOR_USER
		clear
		
		;;
		
	9)
		echo "Loading Lesson..."
		gedit Accounts.txt
		sleep 1
		read WAIT_FOR_USER
		clear
		
		;;
		
	10)
		echo "Loading Lesson..."
		gedit Visudo&Passwd.txt
		sleep 1
		read WAIT_FOR_USER
		clear
		
		;;
		
	11)
		echo "Loading Lesson..."
		gedit SysLog.txt
		sleep 1
		read WAIT_FOR_USER
		clear
		
		;;
		
	*)
		echo "Invalid Input, Redirecting..."
		sleep 1
		menu2
		;;
	
	esac
}
