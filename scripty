#!/bin/bash

#Linux CYBERSTEM interactive manual, V0.2

clear

start() #Starts the function
{
        echo "Starting program..."
}

menu() #Starting of the menu
{
        printf "Which operation would you like to run...?\n" #printf is a better way of printing rather than echo, \n makes a new line blank etc.
        echo "1. Start" #Shows the option of 1 or 2 to be processed
        echo "2. Exit"
        read START_MENU #Reads the input of the keyboard and then the variable


        case $START_MENU in
        1)
                echo "Loading..."
                sleep 1 #Pauses for one second
                start #Moves on with the rest

                 ;;

        2)
                echo "Exiting program..."
                sleep 2
                exit #Closes the script, overall

                ;;

        *) #Asterisk to bring it back
                echo "Invaid input, redirecting..."
                sleep 2
                menu #Refers to the menu options
                ;;

        esac #Closing area
}

menu #Refers the menu outside of the function

echo "Creating Directories, etc..." #Creates CYBERSTEM directory and creates files inside of it
while [ true ]
	do
	sleep 1
	clear
	break
done

mkdir CYBERSTEM && touch CYBERSTEM/Navigation.txt && touch CYBERSTEM/Administrators.txt
#^ Creates the directory and creates a .txt file in the directory and then moves onto more eth
grep da * 2> grep-errors.txt
cat grep-errors.txt
echo "You are running " $(lsb_release -sd) "with kernel" $(uname -r)
read ERROR_IDENTIFICATION
echo
#rm -r CYBERSTEM #OPTIONAL REMOVAL OF DIRECTORY
while [ true ]
	do
	echo "Loading..."
	sleep 1
	break
done

echo "###############################################" #Introduction
  echo "Welcome to the Linux training course!"
  echo "This manual will go straight from start to finish. "
  echo "This course will teach you the bare essentials of BASH!"
  echo "During this tutorial you press -ENTER- to continue. "
echo "###############################################"
read IDEA  #Reads the input of the keyboard
echo " " #Prints anything a user commands it to
while [ true ]
	do
	clear
	break
done

start ()
{
	echo "Loading lessons"
	clear #Will this work?
}

lesson_one()
{
        echo "######################################################################################"
        echo "Welcome to the first lesson in this manual, we hope it will assist you in learning bash and it's many functions"
        echo "Soon you'll find it's quite simpler than you'd think at first glance. Now, let's begin."
        echo "######################################################################################"

        read WAIT_FOR_USER

        echo "######################################################################################"
        echo "First off, we want to cover basic navigation, yeah? So if you'd want to go into directores for example you'd do this"
        echo "CD Example: cd /home"
        echo "What we've done above is simply directing ourselves into the home directory. You can also use cd to direct yourselves into other directories"
        echo "Such as, cd Dekstop, cd /bin, cd cd USER. Basically, you can direct yourself into any directory using cd."
        echo "######################################################################################"

        read WAIT_FOR_USER

        echo "######################################################################################"
        echo "Let's say you'd want to read a text file in your /home directory, you could use cat" 
        echo "Cat is a command that allows you to read text files in the terminal without editable priveledges, such as nano, gedit and vim."
        echo "Example of the cat command in usage: cat navigation.txt Now, all this would do is as said above... print out the contents."
        echo "######################################################################################"

        read WAIT_FOR_USER

        echo "######################################################################################"
        echo "How about wanting to copy, remove and move files,pictures etc. Well, all you need to use are these simple and short commands."
        echo "Example of copy in use: cp test.txt"
        echo "Example of remove in use: rm test.txt There is also a way of removing directores, rm -r Documents."
        echo "Example of move in use: move test.txt /home/Documents /home/Pictures"
        echo "######################################################################################"

        read WAIT_FOR_USER

        echo "######################################################################################"
        echo "How about you want to see what's inside the directory or folder your in? You could use ls or PWD"
        echo "Example of ls: If you want to use ls you could do, ls, or ls -a"  
        echo "If you want to see what directory or whatever your in your could just use PWD as PWD, nothing more to that."
        echo "And that is virtualy all you need to know for basic Linux OS navigation in the terminal." 
        echo "                                  End of Lesson 1"
        echo "######################################################################################"
        read WAIT_FOR_USER   
}
 
lesson_two()
{
        echo "######################################################################################"
        echo "Welcome to the second lesson in this Linux manual. In this we will cover administrative powers""
        echo "We will go over the multiple ways in how it is used etc."
        echo "#######################################################################################

        read WAIT_FOR_USER

        echo "######################################################################################"
        echo "The command to be used as root but yet not root is called SUDO"
        echo "To use SUDO, for example we'd do something such as this."
        echo "Example: sudo visudo"
        echo "sudo visudo is a way to check the sudo configurations etc."
        echo "A default sudoer file should not be edited at all, use common sense to find edits"
        echo "######################################################################################"

        read WAIT_FOR_USER

        echo "######################################################################################"
        echo "Sudo is mainly used to authorize administrative commands"
        echo "An insecure sudo password should be changed, to do so do this."
        echo "sudo passwd root , This will change an insecure root password."
        echo "######################################################################################"

        read WAIT_FOR_USER

        echo "######################################################################################"
        echo "Sudo is used for administrators, root should not be used unless under a special circumstance"
        echo "Sudo is as root yet at a lower level of authority."
        echo "######################################################################################"
        read WAIT_FOR_USER

}

lesson_three()
{

	echo "######################################################################################"
        echo "Welcome to the third lesson of this manual."
        echo "In this section we will be covering services of a Linux machine."
        echo "######################################################################################"
        
        read WAIT_FOR_USER
        
        echo "######################################################################################"
        echo "Services run in the background you of your computer per say."
        echo "Basically what starts on startup, whats running etc."
        echo "If you were to want to examine the services running on your Linux machine you'd do the following.."
        echo "######################################################################################"
        
        read WAIT_FOR_USER
        
        echo "######################################################################################"
        echo "<service --status-all>"
        echo "What this will do is bring up a list of all running services on the machine."
        echo "Now that you can see all the services running, you could start,restart, remove or stop one."
        echo "######################################################################################"
        
        read WAIT_FOR_USER
        
        echo "######################################################################################"
        echo "If you wanted to stop a service for example you'd do..."
        echo "<sudo service SERVICENAME stop>"
        echo "If you were to restart a service you'd do..."
        echo "<sudo service SERVICENAME restart>"
        echo "IF you were to start one you'd do..."
        echo "<sudo service SERVICENAME start>"
        echo "And if you wanted to remove one you'd do..."
        echo "<sudo service rm SERVICENAME>"
        echo "######################################################################################"
        
        read WAIT_FOR_USER
        
}

lesson_four()
{
	echo "######################################################################################"
	echo "Welcome to the fourth lesson in this manual."
	echo "For this section we will be talking a little bit about ports etc."
