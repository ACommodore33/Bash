#!/bin/bash

#Linux CYBERSTEM interactive manual, V.7

start() #Starts the function
{
        echo -e "\e[1;33m Starting program... \e[0m"
        
}

menu() #Starting of the menu
{
	clear
		echo "----------------------------------------------------"
        echo -e "\e[1;33m Which operation would you like to run...? \e[0m"
        echo -e "\e[1;32m [1] Start \e[0m" #Shows the option of 1 or 2 to be processed
        echo -e "\e[1;31m [2] Exit \e[0m"
		echo "----------------------------------------------------"
        read START_MENU #Reads the input of the keyboard and then the variable


        case $START_MENU in
        1)
                echo -e "\e[1;33m Loading... \e[0m"
                sleep 1 #Pauses for one second
                clear
                start #Moves on with the rest

                 ;;

        2)
                echo -e "\e[1;31m Exiting program... \e[0m"
                sleep 1
                clear
                exit #Closes the script, overall

                ;;

        *) #Asterisk to bring it back
                echo -e "\e[1;33m Invaid input, redirecting... \e[0m"
                sleep 1
                clear
                menu #Refers to the menu options
                ;;

        esac #Closing area
}

menu #Refers the menu outside of the function

echo -e "\e[1;33m Creating Directories, etc... \e[0m" #Colored text, why not?
while [ true ]
	do
	sleep 1
	clear
	break
done

mkdir CYBERSTEM && touch CYBERSTEM/Navigation.txt && touch CYBERSTEM/Administration.txt && touch CYBERSTEM/Service.txt && touch CYBERSTEM/SecUpdates.txt && touch CYBERSTEM/GuestandRoot.txt && touch CYBERSTEM/PolicyAccount.txt && touch CYBERSTEM/ProcFile.txt && touch CYBERSTEM/UsrGroup.txt && touch CYBERSTEM/Accounts.txt && touch CYBERSTEM/VisudoandPasswd.txt && touch CYBERSTEM/SysLog.txt
#Creates the CYBERSTEM directory and creates text files in the directory
echo "Running " $(lsb_release -sd) "with kernel" $(uname -r)

while [ true ]
	do
	echo -e "\e[1;33m Loading... \e[0m"
	sleep 2
	clear
	break
done

echo "#################################################################################################################" > CYBERSTEM/Navigation.txt
echo "Welcome to the first installment in this manual." >> CYBERSTEM/Navigation.txt
echo "we hope it will assist you in learning bash and it's many functions" >> CYBERSTEM/Navigation.txt
echo "Soon you'll find it's quite simpler than you'd think at first glance. Now, let's begin." >> CYBERSTEM/Navigation.txt
echo "First off, we want to cover basic navigation, yeah? So if you'd want to go into directores for example you'd do this" >> CYBERSTEM/Navigation.txt
echo "CD Example: <cd /home>" >> CYBERSTEM/Navigation.txt
echo "What we've seen above is simply directing ourselves into the home directory. You can also use cd to direct yourselves into other directories" >> CYBERSTEM/Navigation.txt
echo "Such as, <cd Dekstop>, <cd /bin>, <cd USER>. Basically, you can direct yourself into any directory using <cd>." >> CYBERSTEM/Navigation.txt
echo "Let's say you'd want to read a text file in your /home directory, you could use cat" >> CYBERSTEM/Navigation.txt
echo "Cat is a command that allows you to read text files in the terminal without editable priveledges, such as nano, gedit and vim." >> CYBERSTEM/Navigation.txt
echo "Example of the cat command in usage: cat navigation.txt Now, all this would do is as said above... print out the contents." >> CYBERSTEM/Navigation.txt
echo "How about wanting to copy, remove and move files,pictures etc. Well, all you need to use are these simple and short commands." >> CYBERSTEM/Navigation.txt
echo "Example of copy in use: <cp test.txt>" >> CYBERSTEM/Navigation.txt
echo "Example of remove in use: <rm test.txt> There is also a way of removing directores, <rm -r Documents>" >> CYBERSTEM/Navigation.txt
echo "Example of move in use: move test.txt /home/Documents /home/Pictures" >> CYBERSTEM/Navigation.txt
echo "How about you want to see what's inside the directory or folder your in? You could use <ls> or <PWD>" >> CYBERSTEM/Navigation.txt
echo "Example of ls: If you want to use ls you could do, <ls>, or <ls -a>" >> CYBERSTEM/Navigation.txt
echo "If you want to see what directory or whatever your in your could just use PWD as PWD, nothing more to that." >> CYBERSTEM/Navigation.txt
echo "And that is virtualy all you need to know for basic Linux OS navigation in the terminal." >> CYBERSTEM/Navigation.txt
echo "                                  End of Lesson 1" >> CYBERSTEM/Navigation.txt
echo "#################################################################################################################" >> CYBERSTEM/Navigation.txt
 
echo "#################################################################################################################" > CYBERSTEM/Administration.txt
echo "Welcome to the second installment in this manual." >> CYBERSTEM/Administration.txt
echo "In this section we will cover administrative powers" >> CYBERSTEM/Administration.txt
echo "We will go over the multiple ways in how it is used etc." >> CYBERSTEM/Administration.txt
echo "The command to be used as root but yet not root is called SUDO" >> CYBERSTEM/Administration.txt
echo "To use SUDO, for example we'd do something such as this." >> CYBERSTEM/Administration.txt
echo "Example: <sudo apt-get cowsay>" >> CYBERSTEM/Administration.txt
echo "sudo apt-get cowsay is simply saying GET cowsay." >> CYBERSTEM/Administration.txt
echo "Sudo is mainly just used to authorize certain commands." >> CYBERSTEM/Administration.txt
echo "Sudo is something only Administrators should have access too." >> CYBERSTEM/Administration.txt
echo "                                  End of Lesson 2" >> CYBERSTEM/Administration.txt
echo "#################################################################################################################" >> CYBERSTEM/Administration.txt

echo "#################################################################################################################" > CYBERSTEM/Service.txt
echo "Welcome to the third installment of this manual." >> CYBERSTEM/Service.txt
echo "In this section we will be covering services of a Linux machine." >> CYBERSTEM/Service.txt
echo "Services run in the background you of your computer per say." >> CYBERSTEM/Service.txt
echo "Basically what starts on startup, whats running etc." >> CYBERSTEM/Service.txt
echo "If you were to want to examine the services running on your Linux machine you'd do the following.." >> CYBERSTEM/Service.txt
echo "<service --status-all>" >> CYBERSTEM/Service.txt
echo "What this will do is bring up a list of all running services on the machine." >> CYBERSTEM/Service.txt
echo "Now that you can see all the services running, you could start,restart, remove or stop one." >> CYBERSTEM/Service.txt
echo "If you wanted to stop a service for example you'd do..." >> CYBERSTEM/Service.txt
echo "<sudo service SERVICENAME stop>" >> CYBERSTEM/Service.txt
echo "If you were to restart a service you'd do..." >> CYBERSTEM/Service.txt
echo "<sudo service SERVICENAME restart>" >> CYBERSTEM/Service.txt
echo "IF you were to start one you'd do..." >> CYBERSTEM/Service.txt
echo "<sudo service SERVICENAME start>" >> CYBERSTEM/Service.txt
echo "And if you wanted to remove one you'd do..." >> CYBERSTEM/Service.txt
echo "<sudo service rm SERVICENAME>" >> CYBERSTEM/Service.txt
echo "                                  End of Lesson 3" >> CYBERSTEM/Service.txt
echo "#################################################################################################################" >> CYBERSTEM/Service.txt

echo "#################################################################################################################" > CYBERSTEM/SecUpdates.txt
echo "Welcome to the fourth installment of this manual." >> CYBERSTEM/SecUpdates.txt
echo "In this section we will be going over updates essential for security." >> CYBERSTEM/SecUpdates.txt
echo "There are multiple ways to update, upgrade or even do both commands at once." >> CYBERSTEM/SecUpdates.txt
echo "If you were to begin updating you'd do the following command..." >> CYBERSTEM/SecUpdates.txt
echo "<sudo apt-get install update>" >> CYBERSTEM/SecUpdates.txt
echo "If you were to begin upgrading you'd do the following command..." >> CYBERSTEM/SecUpdates.txt
echo "<sudo apt-get install upgrade>" >> CYBERSTEM/SecUpdates.txt
echo "If you'd like to do both at once and get it done much faster." >> CYBERSTEM/SecUpdates.txt
echo "<Sudo apt-get update && sudo apt-get dist-upgrade>" >> CYBERSTEM/SecUpdates.txt
echo "In doing this command you'll update and upgrade your system, but why the "dist"?" >> CYBERSTEM/SecUpdates.txt
echo "Dist-upgrade is a more sophisticated way of doing it and is much more effective." >> CYBERSTEM/SecUpdates.txt
echo "If you'd like to easily automate security updates by GUI you'd do the following..." >> CYBERSTEM/SecUpdates.txt
echo "You would search "Update Manager" and then go into the setting of it." >> CYBERSTEM/SecUpdates.txt
echo "                                  End of Lesson 4" >> CYBERSTEM/SecUpdates.txt
echo "#################################################################################################################" >> CYBERSTEM/SecUpdates.txt

echo "#################################################################################################################" > CYBERSTEM/GuestandRoot.txt
echo "Welcome to the fifth installment of this manual." >> CYBERSTEM/GuestandRoot.txt
echo "In this section we will be covering the guest account security as well as root login security." >> CYBERSTEM/GuestandRoot.txt
echo "First off, we'll go over the guest accounts and how remove this vulnarability as well as a couple more..." >> CYBERSTEM/GuestandRoot.txt
echo "If were speaking about Ubuntu 12. we'd use this command" >> CYBERSTEM/GuestandRoot.txt
echo "<sudo gedit /etc/lightdm/lightdm.conf> This will bring you to the editable text file to work in." >> CYBERSTEM/GuestandRoot.txt
echo "You'll want to add the following lines" >> CYBERSTEM/GuestandRoot.txt
echo "<allow-guest=false>" >> CYBERSTEM/GuestandRoot.txt
echo "<greeter-hide-users=true>" >> CYBERSTEM/GuestandRoot.txt
echo "Now if were working on a more modern version you'd follow a different process however still similar." >> CYBERSTEM/GuestandRoot.txt
echo "<cd /usr/share/lightdm/lightdm.conf.d/>" >> CYBERSTEM/GuestandRoot.txt
echo "<sudo gedit 50-ubuntu.conf>" >> CYBERSTEM/GuestandRoot.txt
echo "You'd fill the text file with the following" >> CYBERSTEM/GuestandRoot.txt
echo "<allow-guest=false>" >> CYBERSTEM/GuestandRoot.txt
echo "<greeter-hide-users=true>" >> CYBERSTEM/GuestandRoot.txt
echo "Basically very simple however different ways to access it!" >> CYBERSTEM/GuestandRoot.txt
echo "#################################################################################################################" >> CYBERSTEM/GuestandRoot.txt
echo "Now, lets talk about insecure root logins." >> CYBERSTEM/GuestandRoot.txt
echo "Do you really want your root login permitted to yes? Especially when that is a vulnarability?" >> CYBERSTEM/GuestandRoot.txt
echo "Of course not, so that's why we have to fix this." >> CYBERSTEM/GuestandRoot.txt
echo "If we want to access the text file containing the permissions reguarding the root login we'd do the following..." >> CYBERSTEM/GuestandRoot.txt
echo "<sudo gedit /etc/ssh/sshd_config>" >> CYBERSTEM/GuestandRoot.txt
echo "Okay, great so now that were inside we should change every YES permitting a root login to a NO." >> CYBERSTEM/GuestandRoot.txt
echo "This will make it so no one can access our root user." >> CYBERSTEM/GuestandRoot.txt
echo "                                  End of Lesson 5" >> CYBERSTEM/GuestandRoot.txt
echo "#################################################################################################################" >> CYBERSTEM/GuestandRoot.txt

echo "#################################################################################################################" > CYBERSTEM/PolicyAccount.txt
echo "Welcome to the sixth installment of this manual." >> CYBERSTEM/PolicyAccount.txt
echo "In this section we will talk a little bit about Password Policies and Account Lockout." >> CYBERSTEM/PolicyAccount.txt
echo "If we were going to edit the file containg our secure lockouts we'd do this." >> CYBERSTEM/PolicyAccount.txt
echo "<sudo gedit /etc/login.defs>" >> CYBERSTEM/PolicyAccount.txt
echo "Look through the file for a bit, and you'll see Max Days, Min Days, and Age." >> CYBERSTEM/PolicyAccount.txt
echo "You'll want to change Max Days to 150, Min Days to 10, And then Age to 7." >> CYBERSTEM/PolicyAccount.txt
echo "Then close out of that and now we'll go into the Account Policy." >> CYBERSTEM/PolicyAccount.txt
echo "To access the text file where we'll add our own line we'd do the following..." >> CYBERSTEM/PolicyAccount.txt
echo "<sudo gedit /etc/pam.d/common-password>" >> CYBERSTEM/PolicyAccount.txt
echo "Now that were in we'll add the following line to the end of the file." >> CYBERSTEM/PolicyAccount.txt
echo "<auth required pam_tally2.so deny =5 onerr=failunlock_time=1800>" >> CYBERSTEM/PolicyAccount.txt
echo "Now what this is saying is doing is setting the number of allowed failed login attempts, and lockout duration." >> CYBERSTEM/PolicyAccount.txt
echo "                                  End of Lesson 6" >> CYBERSTEM/PolicyAccount.txt
echo "#################################################################################################################" >> CYBERSTEM/PolicyAccount.txt

echo "#################################################################################################################" > CYBERSTEM/ProcFile.txt
echo "Welcome to the seventh installment in this manual." >> CYBERSTEM/ProcFile.txt
echo "In this section we will be covering processes and searching for media files." >> CYBERSTEM/ProcFile.txt
echo "To see how the layout of processes look etc you'd do this command." >> CYBERSTEM/ProcFile.txt
echo "<ps -a>" >> CYBERSTEM/ProcFile.txt
echo "If you wanted to see every single process running you'd do this." >> CYBERSTEM/ProcFile.txt
echo "<ps -A>" >> CYBERSTEM/ProcFile.txt
echo "Now what you can do when finding a process is.. you can kill it." >> CYBERSTEM/ProcFile.txt
echo "This can be especially useful when there is a process running in the background that shouldn't be per say." >> CYBERSTEM/ProcFile.txt
echo "<kill PID_of_target_process>" >> CYBERSTEM/ProcFile.txt
echo "If the program is misbehaving and does not exit when given the TERM signal, we can escalate the signal by passing the KILL signal:" >> CYBERSTEM/ProcFile.txt
echo "<kill -KILL PID_of_target_process>" >> CYBERSTEM/ProcFile.txt
echo "And that is all you need to know about processes essentially." >> CYBERSTEM/ProcFile.txt
echo #################################################################################################################" >> CYBERSTEM/ProcFile.txt
echo "Now, on to finding and removing prohibited media files..." >> CYBERSTEM/ProcFile.txt
echo "If you wanted to search for a media file you'd do this command..." >> CYBERSTEM/ProcFile.txt
echo "<find / -name *.mp3" >> CYBERSTEM/ProcFile.txt
echo "Multiple media files that should be removed are the following." >> CYBERSTEM/ProcFile.txt
echo ".mp3, .mp4, .exe, jpg, jpeg, .wav, .avi, .png" >> CYBERSTEM/ProcFile.txt
echo "I suggest making a script with the following and executing them simultaneously and then removing them." >> CYBERSTEM/ProcFile.txt
echo "                                  End of Lesson 7" >> CYBERSTEM/ProcFile.txt
echo "#################################################################################################################" >> CYBERSTEM/ProcFile.txt

echo "#################################################################################################################" >> CYBERSTEM/UsrGroup.txt
echo "Welcome to the eigth installment of this manual." >> CYBERSTEM/UsrGroup.txt
echo "In this section of the manual, we'll be covering users and groups and how to manage them." >> CYBERSTEM/UsrGroup.txt
echo "If you were going to view the users file you'd do this." >> CYBERSTEM/UsrGroup.txt
echo "<gedit /etc/passwd>" >> CYBERSTEM/UsrGroup.txt
echo "Look for any unauthorized users and make sure that root has 0 users as well." >> CYBERSTEM/UsrGroup.txt
echo "[root:x:0:0:root:/root:/bin/bash] This right here is an example of a clean root user" >> CYBERSTEM/UsrGroup.txt
echo "If you see an unauthorized user in there, do not remove it but comment it out." >> CYBERSTEM/UsrGroup.txt
echo "I cannot stress how important it is to do so, if you were to remove the user." >> CYBERSTEM/UsrGroup.txt
echo "Then you lose not only the user but all of it's data, for all you know that could be essential for something else in time." >> CYBERSTEM/UsrGroup.txt
echo "#################################################################################################################" >> CYBERSTEM/UsrGroup.txt
echo "Moving on, we'll now talk about groups." >> CYBERSTEM/UsrGroup.txt
echo "NOW!, If you were going to view the group file then you'd execute this command..." >> CYBERSTEM/UsrGroup.txt
echo "<gedit /etc/group>" >> CYBERSTEM/UsrGroup.txt
echo "Make sure to check this file to look for groups that shouldn't be there, to see if a user is in said group etc." >> CYBERSTEM/UsrGroup.txt
echo "Always a good thing to check, also make sure root looks like this [root:x:0:]" >> CYBERSTEM/UsrGroup.txt
echo "And that is the minimum that you'll need to know about user and group files." >> CYBERSTEM/UsrGroup.txt
echo "                                  End of Lesson 8" >> CYBERSTEM/UsrGroup.txt
echo "#################################################################################################################" >> CYBERSTEM/UsrGroup.txt

echo "#################################################################################################################" > CYBERSTEM/Accounts.txt
echo "Welcome to the ninth installment of this manual." >> CYBERSTEM/Accounts.txt
echo "Here in this section we'll cover user accounts." >> CYBERSTEM/Accounts.txt
echo "Though we've covered a little about finding hidden useres, this will just be focused on the GUI area." >> CYBERSTEM/Accounts.txt
echo "If you want to see the un-hidden users you'd look for the UserAccounts GUI." >> CYBERSTEM/Accounts.txt
echo "First off, check to see if everyone is ranked what they should be etc." >> CYBERSTEM/Accounts.txt
echo "That's basically as simple as it gets so this is just almost as a note." >> CYBERSTEM/Accounts.txt
echo "                                  End of Lesson 9" >> CYBERSTEM/Accounts.txt
echo "#################################################################################################################" >> CYBERSTEM/Accounts.txt

echo "#################################################################################################################" > CYBERSTEM/VisudoandPasswd.txt
echo "Welcome to the tenth installment in this manual." >> CYBERSTEM/VisudoandPasswd.txt
echo "In this section we will be covering the sudoers file and insecure root login." >> CYBERSTEM/VisudoandPasswd.txt
echo "Now, the sudoer file is where root privelegdes are contained." >> CYBERSTEM/VisudoandPasswd.txt
echo "To access this file and to edit the file you would execute this command..." >> CYBERSTEM/VisudoandPasswd.txt
echo "<sudo visudo>" >> CYBERSTEM/VisudoandPasswd.txt
echo "Make sure everything checks out as should and then back out(USE COMMON SENSE)" >> CYBERSTEM/VisudoandPasswd.txt
echo "Now usually the root login could be insecure, we definitely have to fix that." >> CYBERSTEM/VisudoandPasswd.txt
echo "The command to execute that is this," >> CYBERSTEM/VisudoandPasswd.txt
echo "<sudo passwd>" >> CYBERSTEM/VisudoandPasswd.txt
echo "It'll prompt you for a password, just enter the new one and then you have your new secure root password." >> CYBERSTEM/VisudoandPasswd.txt
echo "                                  End of Lesson 10" >> CYBERSTEM/VisudoandPasswd.txt
echo "#################################################################################################################" >> CYBERSTEM/VisudoandPasswd.txt

echo "#################################################################################################################" > CYBERSTEM/SysLog.txt
echo "This is just on how to install and run system logs" >> CYBERSTEM/SysLog.txt
echo "You'd execute the following commands." >> CYBERSTEM/SysLog.txt
echo "<Sudo apt-get install gnome>" >> CYBERSTEM/SysLog.txt
echo "<gnome-system-logs>" >> CYBERSTEM/SysLog.txt
echo "This will install and then let you view them well." >> CYBERSTEM/SysLog.txt
echo "Good luck, hope you've learned something from all of this!" >> CYBERSTEM/SysLog.txt
echo "                                  End of Lesson 11" >> CYBERSTEM/SysLog.txt
echo "#################################################################################################################" >> CYBERSTEM/SysLog.txt

cd CYBERSTEM

echo -e "\e[1;33m ################################################################### \e[0m"
echo "Welcome to the Linux training course!"
echo "This manual will have lessons presented in a selection menu."
echo "This course will teach you the bare essentials of BASH!"
printf "During this tutorial you press -ENTER- to continue.\n"
printf "During selection menu's answer with a number.\n"
echo -e "\e[1;33m ------------------------------------------------------------------ \e[0m"
read WAIT_FOR_USER  #Reads the input of the keyboard

while [ true ]
	do
	clear
	break
done

begin()
{
	echo -e "\e[1;33m Loading Lesson Selection... \e[0m"
}

menu2()
{

	echo -e "\e[1;33m ######Lesson Selection Menu################################ \e[0m"
	echo -e "\e[1;31m ~If editable, DO NOT EDIT ANY TEXT FILES!~ \e[0m" #Text in RED
	printf "[1] Basic Linux Navigation\n"
	printf "[2] Administrative Capabilities\n"
	printf "[3] Service Management\n"
	printf "[4] Security Updates\n"
	printf "[5] Guest Accounts and Root Login\n"
	printf "[6] Account Policy and Secure Lockout\n"
	printf "[7] Processes and Finding Files\n"
	printf "[8] Hidden Users and Groups\n"
	printf "[9] User Accounts\n"
	printf "[10] Sudoers file and Insecure Root Password\n"
	printf "[11] System Log Checking\n"
	echo -e "\e[1;31m [12] Exit Program \e[0m"
	echo -e "\e[1;32m ------------------------------------------------------------ \e[0m"
	read begin_menu2


	case $begin_menu2 in
	1)
		echo -e "\e[1;33m Loading Lesson... \e[0m"   #What this does is pause for a second, view the file, clear the stuff there, then
		sleep 1                    #Bring you back to the menu again but clean
		clear
		cat Navigation.txt
		read WAIT_FOR_USER
		clear
		menu2
		
		;;
		
	2)
		echo -e "\e[1;33m Loading Lesson... \e[0m"
		sleep 1
		clear
		cat Administration.txt
		read WAIT_FOR_USER
		clear
		menu2
		
		;;
		
	3)
		echo -e "\e[1;33m Loading Lesson... \e[0m"
		sleep 1
		clear
		cat Service.txt
		read WAIT_FOR_USER
		clear
		menu2
	
		;;
		
	4)
		echo -e "\e[1;33m Loading Lesson... \e[0m"
		sleep 1
		clear
		cat SecUpdates.txt
		read WAIT_FOR_USER
		clear
		menu2
		
		;;
		
	5)
		echo -e "\e[1;33m Loading Lesson... \e[0m"
		sleep 1
		clear
		cat GuestandRoot.txt
		read WAIT_FOR_USER
		clear
		menu2
		
		;;
		
	6)
		echo -e "\e[1;33m Loading Lesson... \e[0m"
		sleep 1
		clear
		cat PolicyAccount.txt
		read WAIT_FOR_USER
		clear
		menu2
		
		;;
	
	7)
		echo -e "\e[1;33m Loading Lesson... \e[0m"
		sleep 1
		clear
		cat ProcFile.txt
		read WAIT_FOR_USER
		clear
		menu2
		
		;;
		
	8)
		echo -e "\e[1;33m Loading Lesson... \e[0m"
		sleep 1
		clear
		cat UsrGroup.txt
		read WAIT_FOR_USER
		clear
		menu2
		
		;;
		
	9)
		echo -e "\e[1;33m Loading Lesson... \e[0m"
		sleep 1
		clear
		cat Accounts.txt
		read WAIT_FOR_USER
		clear
		menu2
		
		;;
		
	10)
		echo -e "\e[1;33m Loading Lesson... \e[0m"
		sleep 1
		clear
		cat VisudoandPasswd.txt
		read WAIT_FOR_USER
		clear
		menu2
		
		;;
		
	11)
		echo -e "\e[1;33m Loading Lesson... \e[0m"
		sleep 1
		clear
		cat SysLog.txt
		read WAIT_FOR_USER
		clear
		menu2
		
		;;
		
	12)
		echo -e "\e[1;31m Shutting down... \e[0m"
		sleep 1
		clear
		exit
		
		;;
		
	*)
		echo -e "\e[1;33m Invalid Input, Redirecting... \e[0m"
		sleep 1
		clear
		menu2
		;;
	
	esac
}

menu2
